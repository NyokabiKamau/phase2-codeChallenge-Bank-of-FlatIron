{"ast":null,"code":"var _jsxFileName = \"/Users/nyokabikamau/Development/code/Phase2/code-challenges/phase2-codeChallenge-Bank-of-FlatIron/src/components/Transactions.js\";\nimport React from \"react\";\nimport TransactionItem from \"./TransactionItem\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Transactions(_ref) {\n  let {\n    transactions,\n    search\n  } = _ref;\n  let transactionList;\n  if (transactions) {\n    const filteredTransactions = transactions.filter(filt => transaction.description.toLowerCase().includes(search.toLowerCase()) || transaction.category.toLowerCase().includes(search.toLowerCase()));\n    transactionList = filteredTransactions.map(transaction => /*#__PURE__*/_jsxDEV(TransactionItem, {\n      id: transaction.id,\n      date: transaction.date,\n      description: transaction.description,\n      category: transaction.category,\n      amount: transaction.amount\n    }, transaction.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this));\n  }\n  return /*#__PURE__*/_jsxDEV(\"table\", {\n    children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n      children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Date\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Description\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Category\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Amount\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this), transactionList]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n}\n_c = Transactions;\nexport default Transactions;\nvar _c;\n$RefreshReg$(_c, \"Transactions\");","map":{"version":3,"names":["React","TransactionItem","Transactions","transactions","search","transactionList","filteredTransactions","filter","filt","transaction","description","toLowerCase","includes","category","map","id","date","amount"],"sources":["/Users/nyokabikamau/Development/code/Phase2/code-challenges/phase2-codeChallenge-Bank-of-FlatIron/src/components/Transactions.js"],"sourcesContent":["import React from \"react\";\nimport TransactionItem from \"./TransactionItem\";\n\nfunction Transactions({transactions, search}) {\n\n  let transactionList;\n\n  if(transactions){\n    const filteredTransactions = transactions.filter(\n      filt => (\n        transaction.description.toLowerCase().includes(search.toLowerCase()) || transaction.category.toLowerCase().includes(search.toLowerCase())\n      )\n    )\n    transactionList = filteredTransactions.map((transaction) => (    \n      <TransactionItem\n        key={transaction.id}\n        id = {transaction.id}\n        date={transaction.date}\n        description={transaction.description}\n        category={transaction.category}\n        amount={transaction.amount}\n      />\n    ))\n  }\n\n    return (\n        <table>\n            <tbody>\n                <tr>\n                    <th>Date</th>\n                    <th>Description</th>\n                    <th>Category</th> \n                    <th>Amount</th>\n                </tr>\n               {transactionList}\n           </tbody>\n        </table>\n    )\n}\n\nexport default Transactions"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,eAAe,MAAM,mBAAmB;AAAC;AAEhD,SAASC,YAAY,OAAyB;EAAA,IAAxB;IAACC,YAAY;IAAEC;EAAM,CAAC;EAE1C,IAAIC,eAAe;EAEnB,IAAGF,YAAY,EAAC;IACd,MAAMG,oBAAoB,GAAGH,YAAY,CAACI,MAAM,CAC9CC,IAAI,IACFC,WAAW,CAACC,WAAW,CAACC,WAAW,EAAE,CAACC,QAAQ,CAACR,MAAM,CAACO,WAAW,EAAE,CAAC,IAAIF,WAAW,CAACI,QAAQ,CAACF,WAAW,EAAE,CAACC,QAAQ,CAACR,MAAM,CAACO,WAAW,EAAE,CACzI,CACF;IACDN,eAAe,GAAGC,oBAAoB,CAACQ,GAAG,CAAEL,WAAW,iBACrD,QAAC,eAAe;MAEd,EAAE,EAAIA,WAAW,CAACM,EAAG;MACrB,IAAI,EAAEN,WAAW,CAACO,IAAK;MACvB,WAAW,EAAEP,WAAW,CAACC,WAAY;MACrC,QAAQ,EAAED,WAAW,CAACI,QAAS;MAC/B,MAAM,EAAEJ,WAAW,CAACQ;IAAO,GALtBR,WAAW,CAACM,EAAE;MAAA;MAAA;MAAA;IAAA,QAOtB,CAAC;EACJ;EAEE,oBACI;IAAA,uBACI;MAAA,wBACI;QAAA,wBACI;UAAA,UAAI;QAAI;UAAA;UAAA;UAAA;QAAA,QAAK,eACb;UAAA,UAAI;QAAW;UAAA;UAAA;UAAA;QAAA,QAAK,eACpB;UAAA,UAAI;QAAQ;UAAA;UAAA;UAAA;QAAA,QAAK,eACjB;UAAA,UAAI;QAAM;UAAA;UAAA;UAAA;QAAA,QAAK;MAAA;QAAA;QAAA;QAAA;MAAA,QACd,EACLV,eAAe;IAAA;MAAA;MAAA;MAAA;IAAA;EACZ;IAAA;IAAA;IAAA;EAAA,QACH;AAEhB;AAAC,KAnCQH,YAAY;AAqCrB,eAAeA,YAAY;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}